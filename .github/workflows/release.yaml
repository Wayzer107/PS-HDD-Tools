name: release

on: [workflow_dispatch]

env:
  BUILD_TYPE: Release

jobs:
  # build-windows:
  #   runs-on: windows-latest
  # 
  #   steps:
  #   - uses: actions/checkout@v2
  #     with:
  #       submodules: true
  # 
  #   - name: Install Qt
  #     uses: jurplel/install-qt-action@v2
  #     with:
  #       modules: 'core gui widgets'
  # 
  #   - name: Create Build Environment
  #     run: cmake -S . -B build
  # 
  #   - name: Build
  #     shell: bash
  #     run: |
  #       cmake --build ./build --config $BUILD_TYPE
  #       windeployqt --release --verbose 2 bin/Release/file-explorer.exe
  #       windeployqt --release --verbose 2 bin/Release/hex-viewer.exe
  # 
  #   - name: Upload Artifact
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: Release-${{ runner.os }}
  #       path: bin/Release

  build-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        modules: 'core gui widgets'
        
    - name: Install CQTDeployer
      run: |
        sudo snap install cqtdeployer
        sudo snap connect cqtdeployer:process-control
        sudo snap connect cqtdeployer:removable-media
        sudo snap connect cqtdeployer:system-backup

    - name: Create Build Environment
      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      shell: bash
      run: |
        cmake --build ./build --config $BUILD_TYPE
        cqtdeployer -bin bin/Release/
        pwd
        ls

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Release-${{ runner.os }}
        path: DistributionKit/*

  #build-macos:
  #  runs-on: macos-latest
  #
  #  steps:
  #  - uses: actions/checkout@v2
  #    with:
  #      submodules: true
  #
  #  - name: Install Qt
  #    uses: jurplel/install-qt-action@v2
  #    with:
  #      modules: 'core gui widgets'
  #
  #  - name: Create Build Environment
  #    run: cmake -S . -B build -DCMAKE_BUILD_TYPE=$BUILD_TYPE
  #
  #  - name: Build
  #    shell: bash
  #    run: |
  #      cmake --build ./build --config $BUILD_TYPE
  #      pwd
  #      ls
  #
  #  - name: Upload Artifact
  #    uses: actions/upload-artifact@v2
  #    with:
  #      name: Release-${{ runner.os }}
  #      path: bin/Release
